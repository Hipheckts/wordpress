#!/usr/bin/env node

var fs    = require('fs');
var path  = require('path');
var util  = require('util');
var words = require('in-words').en;

var cwd   = process.cwd();
var from  = path.join(cwd, 'bower_components', 'wordpress');
var to    = path.join(cwd, 'web', 'wp');

console.log('Evolution WordPress - Bower `postinstall` Script\n');

// Ensure `bower_components/wordpress` has been installed
if (!fs.existsSync(from)) {
  throw new Error(util.format('WordPress has not been installed to `%s`', from));
}

var toThemeDir = path.join(cwd, 'web', 'wp-content', 'themes');

if (!fs.existsSync(toThemeDir)) {
  var parts           = path.relative(cwd, toThemeDir).split(path.sep);
  var toThemePartDir  = cwd;

  while (parts.length) {
    toThemePartDir = path.join(toThemePartDir, parts.shift());

    console.info('Creating `%s`...', toThemePartDir);
    fs.mkdirSync(toThemePartDir);
  }
}

var fromThemeDir  = path.join(from, 'wp-content', 'themes');
var latestTheme   = null;
var themeExists   = function (parents, name) {
  var exists = false;
  parents.forEach (function (directory) {
    if (fs.existsSync( path.join(directory, name) )) {
      exists = true;
    }
  });
  return exists;
};

for (var testYear = new Date().getFullYear(); testYear > 2009; testYear--) {
  var testName = words(testYear.toString().substr(0,2))
               + words(testYear.toString().substr(2,2))
  ;

  if (themeExists([toThemeDir,fromThemeDir], testName)) {
    latestTheme = testName;
    break;
  }
  else {
    console.log('No theme ' + testName);
  }
}

if (latestTheme === null) {
  if (themeExists([fromThemeDir], 'default')) {
    latestTheme = 'default';
  }
  else {
    throw new Error(util.format('Could not find WordPress core theme in `%s`', fromThemeDir));
  }
}

if (themeExists([toThemeDir], latestTheme)) {
  console.log('Existing core theme ' + latestTheme);
}
else {
  console.log('Found theme ' + latestTheme);

  var fromTheme = path.join(fromThemeDir, latestTheme);
  var toTheme   = path.join(toThemeDir, latestTheme);

  console.log('Moving theme `%s` to `%s`...', path.relative(cwd, fromTheme), path.relative(cwd, toTheme));
  fs.renameSync(fromTheme, toTheme);
}

// Remove existing `web/wp` folder
if (fs.existsSync(to)) {
  console.info('Removing `%s`...', to);

  var removeDir = function(dir) {
    var nodes = fs.readdirSync(dir).map(function(node) {
      return path.join(dir, node);
    });

    nodes.forEach(function(node) {
      var stats = fs.lstatSync(node);

      if (stats.isDirectory()) {
        removeDir(node);
      } else {
        fs.unlinkSync(node);
      }
    });

    fs.rmdirSync(dir);
  };

  removeDir(to);
}

console.info('Renaming `%s` to `%s`...', path.relative(cwd, from), path.relative(cwd, to));
fs.renameSync(from, to);

console.log('Done!');
